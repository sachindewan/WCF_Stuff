//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duplex_WCF.SampleWcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SampleWcfService.IProcess", CallbackContract=typeof(Duplex_WCF.SampleWcfService.IProcessCallback))]
    public interface IProcess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcess/TaskProcess", ReplyAction="http://tempuri.org/IProcess/TaskProcessResponse")]
        void TaskProcess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcess/TaskProcess", ReplyAction="http://tempuri.org/IProcess/TaskProcessResponse")]
        System.Threading.Tasks.Task TaskProcessAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProcessCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProcess/TaskProgress", ReplyAction="http://tempuri.org/IProcess/TaskProgressResponse")]
        void TaskProgress(int progress);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProcessChannel : Duplex_WCF.SampleWcfService.IProcess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessClient : System.ServiceModel.DuplexClientBase<Duplex_WCF.SampleWcfService.IProcess>, Duplex_WCF.SampleWcfService.IProcess {
        
        public ProcessClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ProcessClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ProcessClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void TaskProcess() {
            base.Channel.TaskProcess();
        }
        
        public System.Threading.Tasks.Task TaskProcessAsync() {
            return base.Channel.TaskProcessAsync();
        }
    }
}
